(entrypoint (pair (a: int) (b: int))
  (if (le a b)
    (* then - min(a,b) = a *)
    (forall (n: int)
      (if (neq 0 (mod b a))
        (* then *)
        (if (and (le 2 n)
                 (le n (div a 2)))
          (assert
            (not (and (eq (mod a n) 0)
	               (eq (mod b n) 0)))))
        (* else *)
        (assert false)))
    (* else - min(a,b) = b *)
    (forall (n: int)
      (if (neq 0 (mod a b))
        (* then *)
        (if (and (le 2 n)
                 (le n (div b 2)))
          (assert
            (not (and (eq (mod a n) 0)
	               (eq (mod b n) 0)))))
        (* else *)
        (assert false)))))

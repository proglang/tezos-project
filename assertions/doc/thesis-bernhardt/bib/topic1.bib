@unpublished{thiemann_2020,
	title = {\relax{Exposé Master Thesis - Checking Assertions for Smart Contracts}},
	language = {en},
	author = {Thiemann, Peter},
    year = {2020}
}

@techreport{goodman_tezos_2014,
	title = {Tezos — a self-amending crypto-ledger {White} paper},
	abstract = {We present Tezos, a generic and self-amending crypto-ledger. Tezos can instantiate any blockchain based ledger. The operations of a regular blockchain are implemented as a purely functional module abstracted into a shell responsible for network operations. Bitcoin, Ethereum, Cryptonote, etc. can all be represented within Tezos by implementing the proper interface to the network layer. Most importantly, Tezos supports meta upgrades: the protocols can evolve by amending their own code. To achieve this, Tezos begins with a seed protocol defining a procedure for stakeholders to approve amendments to the protocol, including amendments to the voting procedure itself. This is not unlike philosopher Peter Suber’s Nomic[3], a game built around a fully introspective set of rules.},
	language = {en},
	author = {Goodman, L M},
    year = {2014}
}

@article{blustein_bloom_2002,
	title = {Bloom {Filters} — {A} {Tutorial}, {Analysis}, and {Survey}},
	abstract = {Bloom ﬁlters use superimposed hash transforms to provide a probabilistic membership test. The only types of errors are false positives (non-members being reported as members). Non-members are typically detected quickly (requiring only two probes in the optimal case).},
	language = {en},
	author = {Blustein, James and El-Maazawi, Amal},
	pages = {19},
	year= {2002}
}

@techreport{wood_ethereum_2021,
	title = {{ETHEREUM}: {A} {SECURE} {DECENTRALISED} {GENERALISED} {TRANSACTION} {LEDGER}},
	abstract = {The blockchain paradigm when coupled with cryptographically-secured transactions has demonstrated its utility through a number of projects, with Bitcoin being one of the most notable ones. Each such project can be seen as a simple application on a decentralised, but singleton, compute resource. We can call this paradigm a transactional singleton machine with shared-state.},
	language = {en},
	author = {Wood, Dr Gavin},
	year = {2021},
	institution = {www.ethereum.org}
}